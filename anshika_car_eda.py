# -*- coding: utf-8 -*-
"""Anshika_car EDA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12V66h6BADRPfvZ3lMcLZqL9sSYYS-e6w
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('/train.csv')

df.shape

df.head()

df.columns

df = df.replace('-', np.NaN)

df.isnull().sum()

df.info()

df['Engine volume'].unique()

df['Levy'] = df['Levy'].astype(float)

df['Distance_driven'] = df['Mileage'].str.extract(r'([\d:,.]+)')

df['Years_old'] = 2022 - df['Prod. year']

df.head()

df.drop('Mileage', axis=1, inplace=True)
df.drop('Prod. year', axis=1, inplace=True)

df.head()

df.info()

df['Distance_driven'] = df['Distance_driven'].astype(int)

df.info()

df['Levy'] = np.log(df['Levy'])
df['Price'] = np.log(df['Price'])
plt.scatter(df['Levy'],df['Price'])
plt.xlabel('Levy')
plt.ylabel('price')
plt.show()

df.groupby('Doors')['Price'].median().plot.bar()
plt.xlabel('Doors')
plt.ylabel('Price')
plt.title('Doors')
plt.show()

import seaborn as sns
correlation = df.corr()
sns.heatmap(correlation, cbar=True, square=True, fmt='.2f', annot=True, annot_kws={'size':8}, cmap='Blues')

df['Distance_driven'] = np.log(df['Distance_driven'])
df['Price'] = np.log(df['Price'])
plt.scatter(df['Distance_driven'],df['Price'],df['Years_old'])
plt.xlabel('Distance_driven')
plt.ylabel('price')
plt.show()

plt.rcParams['figure.figsize'] = (5, 5)
fig = sns.scatterplot(y ='Price',x='Distance_driven', hue = 'Years_old',data =df,s=25);
fig.set(xlabel = 'Distance_driven', ylabel = 'Price', title = 'Relationship between mileage, age and price');

plt.rcParams['figure.figsize'] = (10, 5)
column = 'Manufacturer'
graph =  df.groupby(column)['Price'].mean().sort_values(ascending=True).head(10)
fig = sns.barplot(x = graph.values, y = graph.index);
fig.set(xlabel = 'Price', ylabel = 'Manufacturer', title = 'Average price breakdown by make (luxury brands)');
plt.figure()
plt.rcParams['figure.figsize'] = (10, 5)
column = 'Manufacturer'
graph =  df.groupby(column)['Price'].mean().sort_values(ascending=True).head(10)
fig = sns.barplot(x = graph.values, y = graph.index);
fig.set(xlabel = 'Price', ylabel = 'Manufacturer', title = 'Average price breakdown by make (economy brands)');

plt.rcParams['figure.figsize'] = (10, 1.5)
column = 'Gear box type'
graph =  df.groupby(column)['Price'].count().sort_values(ascending=False)
fig = sns.barplot(x = graph.values, y = graph.index);
fig.set(xlabel = 'Number of listings', ylabel = 'Gear box type', title = 'Number of listings for each transmission type');